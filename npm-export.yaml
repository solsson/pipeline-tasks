# Test and package an npm library
# Builds an "export" image, which is only a convention
# to let other docker builds do COPY --from=builds.registry.svc.cluster.local/...
# Caching is essential for this task, to let us build all libs at every push

apiVersion: pipeline.knative.dev/v1alpha1
kind: Task
metadata:
  name: npm-export
  namespace: default
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    params:
    - name: directory
      description: The subdirectory of the workspace/repo
      default: .
  outputs:
    resources:
    - name: builtImage
      type: image
  steps:
  - name: dockerfile
    image: busybox@sha256:2a03a6059f21e150ae84b0973863609494aad70f0a80eaeb64bddd8d92465812
    command:
    - /bin/sh
    args:
    - -c
    - |
      cat <<EOF > ${input.params.directory}/Dockerfile
      FROM node:10.14.2-slim@sha256:7e6741b8b25881f50c6294b907d8ee9e63c735438e4d62b96ce019050df256bf
      RUN mkdir -p /exports/package
      WORKDIR /usr/src/app
      COPY package*.json .
      RUN pwd
      RUN npm install --production
      RUN cp -r node_modules /exports/package/
      COPY . .
      RUN npm install
      RUN npm test
      RUN npm pack
      RUN cp *.tgz /exports/
      RUN cd /exports/ && tar xvzf *.tgz
      RUN du -sh /exports/*
      RUN du -sh /exports/package/*
      FROM scratch
      COPY --from=0 /exports /exports
      EOF
  - name: build-and-push
    image: gcr.io/kaniko-project/executor@sha256:cc999f884178881e638fc943fa76e71a958dcdab1b516281ae0bb749ae2c3a54
    command:
    - /kaniko/executor
    args:
    - --dockerfile=/workspace/${inputs.params.directory}/Dockerfile
    - --context=/workspace/${inputs.params.directory}
    - --destination=${outputs.resources.builtImage.url}:${inputs.resources.workspace.revision}
    # Until we've figured out how to deal with source ref and/or output image digest in knative
    # https://github.com/knative/build-pipeline/issues/216#issuecomment-443540440 etc.
    - --destination=${outputs.resources.builtImage.url}:latest
